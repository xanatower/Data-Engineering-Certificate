[Music]
In this video we will listen to several
data professionals
talk about some of the factors they
consider while deciding on the most
appropriate data repository for their
organization.
There's a number of factors to keep in
mind while picking the right
database for the job. You need to look at
the use case,
what is the data repository going to be
used for.
Is it going to be used for storing
structured information, semi-structured,
or unstructured information,
or do you know beforehand what the
schema of the data is?
Do you... is there performance requirements?
Are you working with data at rest, or
streaming data, or data in motion?
Does the data need to be
encrypted? Does their...
is their, you know, what's the volume of
data that you're working with?
Do you need a big data system?
And what are the storage requirements?
Does the data need to be
updated frequently and accessed
frequently,
that just need to be stored and kept in
a vault for a long time
and is needed for backup purposes,
for example?
And then your organization might have
certain standards they might have put
in place of
which databases or which data
repositories you're allowed to use
for different kinds of tasks. So, all of
these factors need to be kept in mind.
So, when we consider what data repository
we want to choose,
we look at these factors.
We look at
what are the kind of capacities that
this data required is supposed to
handle. And then we also look at the
type of access that we need this for.
Do we access it in short intervals
or do we run long running queries on it?
Am I using it more for transaction
processing,
or am I using it for analytics,
or archival purpose, or for data
warehousing purpose?
We also look for compatibility; how
compatible this
new data repository is with my
existing ecosystem of programming
languages, tools,
and any processes
that we have. We also consider the
security features this repository
gives us. And the most important thing
is scalability. We may be happy with its
performance today
but is it scalable enough? Can it scale
along with the organization?
I don't often get to choose
the type of data repository that my
organization uses.
And very few organizations use one
data repository
these days. On my team that I work on
these days,
we have a set of preferred solutions.
We have a preferred enterprise
relational database.
We have a preferred open source
relational database for some of the
smaller projects and for the
microservices.
And then we also have a preferred
unstructured data source.
So, those are our three main ones.
The important thing
is to think about the skills that you
have within your organization, or that
you want to foster within your
organization, and consider the costs of
the various solutions.
In our case, we have some experts on DB2.
So, our enterprise database of choice
is DB2.
However, there are other projects that
use different ones.
For open source we've changed that
a couple of times. We've gone a couple of
different directions with where we
really want to be there.
And all of these, the hosting platform
makes a difference as well
because now
it's not just, do I want to use
IBM DB2,
or do I want to use some other vendors,
Microsoft SQL server, or whatever. It's
not between those two choices. It's when
I do those,
do I want to do them on AWS RDS?
Maybe I should consider Amazon's
Aurora. Maybe I should consider
Google's relational offerings.
There's so many
different choices there that you have to
consider. There's the decision of
how should the data be stored. There's
the decision of
how should the data be retrieved.
And there's also the decision of where.
Those are all very important questions
when you're deciding
on data storage. I would say the
structure of the data,
the nature of the application, and the
volume at which the data is getting
ingested into your database,
all these factors determine the
nature of the data source that you
should pick.
In most cases, a relational database
should be enough,
however, there will be
edge cases where relational databases
such as IBM DB2,
Oracle, or postgres won't necessarily do
the job for you.
In those cases, so depending on the
use case, for example, if you're
ingesting gigabytes or terabytes of
data per day,
then document stores
such as MongoDB, or wide-column
stores such as Cassandra,
might be a good fit for you.
At the same time, if you're trying to build
a product recommendation engines,
are trying to show the network of
relationships between different people
on the social media,
then graph data structures
such as Neo4j
or Apache TinkerPop, would be an ideal
fit for you.
At the same time, if you're mining
through terabytes or petabytes of data
for analytics, Hadoop engine
with MapReduce
would be a good fit for you. So, it
really boils down to the nature of the
application on the volume of the data,
on the structure of the data, before
you can pick the right database
or data source
whatever use case.